import{_ as e,c as s,o as a,d as t}from"./app.655126e9.js";const f=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[{"level":2,"title":"项目使用 ts 前置知识","slug":"项目使用-ts-前置知识","link":"#项目使用-ts-前置知识","children":[{"level":3,"title":"ts-loader","slug":"ts-loader","link":"#ts-loader","children":[]},{"level":3,"title":"tsconfig","slug":"tsconfig","link":"#tsconfig","children":[]},{"level":3,"title":"声明文件作用","slug":"声明文件作用","link":"#声明文件作用","children":[]}]}],"relativePath":"TypeScript/ts编译和配置.md"}'),l={name:"TypeScript/ts编译和配置.md"},n=t(`<h2 id="项目使用-ts-前置知识" tabindex="-1">项目使用 ts 前置知识 <a class="header-anchor" href="#项目使用-ts-前置知识" aria-hidden="true">#</a></h2><h3 id="ts-loader" tabindex="-1">ts-loader <a class="header-anchor" href="#ts-loader" aria-hidden="true">#</a></h3><ul><li>用来在打包的时候处理ts文件</li></ul><h3 id="tsconfig" tabindex="-1">tsconfig <a class="header-anchor" href="#tsconfig" aria-hidden="true">#</a></h3><ul><li>用来调控如何编译ts，不能没有</li></ul><h3 id="声明文件作用" tabindex="-1">声明文件作用 <a class="header-anchor" href="#声明文件作用" aria-hidden="true">#</a></h3><ul><li>如果引入的外部库没有声明文件，ts 会当成any(但不影响使用)，需要声明文件 <ul><li>没有什么声明文件的外部库，基本上都可以npm直接安装（通过 <code>@type/lodash</code>）</li></ul></li><li>js 中定义在全局的内容可以在其他文件中使用，但是在ts中不能这样使用，需要使用全局声明文件（<code>global.d.ts</code>）声明一下</li></ul><div class="language-ts"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki material-theme-palenight" tabindex="0"><code><span class="line"><span style="color:#C792EA;">declare</span><span style="color:#A6ACCD;"> </span><span style="color:#C792EA;">let</span><span style="color:#A6ACCD;"> a</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#FFCB6B;">number</span><span style="color:#A6ACCD;"> </span></span>
<span class="line"></span></code></pre></div>`,8),i=[n];function o(r,c,d,p,h,_){return a(),s("div",null,i)}const g=e(l,[["render",o]]);export{f as __pageData,g as default};
