import{_ as t,c as d,o as r,d as e}from"./app.89aea504.js";const u=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"html&css&js/JavaScript/数组的方法.md"}'),i={name:"html&css&js/JavaScript/数组的方法.md"},l=e("<p>💥 <strong>数组的基本方法</strong></p><table><thead><tr><th>方法</th><th>是否改变原数组</th><th>返回和用法</th></tr></thead><tbody><tr><td>pop()</td><td>改变原数组</td><td>返回被删除的元素</td></tr><tr><td>push()</td><td>改变原数组</td><td>返回新长度</td></tr><tr><td>shift()</td><td>改变原数组</td><td>返回被删除的元素</td></tr><tr><td>unshift()</td><td>改变原数组</td><td>返回新长度</td></tr><tr><td>splice(操作位置索引，删除个数，插入元素)</td><td>改变原数组</td><td>返回增加元素后 / 删除元素的数组</td></tr><tr><td>reverse()</td><td>改变原数组</td><td>返回颠倒后的数组</td></tr><tr><td>slice(开始索引，结束索引)</td><td>不改变原数组</td><td>返回截取出来的元素，如果参数是负数就是倒数的元素；左闭右开</td></tr><tr><td>concat()</td><td>不改变原数组</td><td>返回连接后的新数组</td></tr><tr><td>join(&#39;用于连接元素的字符&#39;)</td><td>不改变元素组</td><td>返回字符串</td></tr><tr><td>flat(嵌套层数)</td><td>不改变原数组</td><td>返回扁平化后的新数组</td></tr><tr><td>reduce((pre,cur,index,arr) =&gt; { }, init)</td><td>不改变元素组</td><td>返回元素经过函数操作后的值，可用数组元素求和、数组扁平化</td></tr></tbody></table><p>💥 <strong>数组的遍历方法</strong></p><table><thead><tr><th>方法</th><th>是否改变原数组</th><th>特点</th></tr></thead><tbody><tr><td>forEach</td><td>否</td><td>为每个数组元素调用函数，没有返回值，不改变原数组</td></tr><tr><td>map</td><td>否</td><td>为每个数组元素调用函数，有返回值，不改变原数组，可链式调用</td></tr><tr><td>filter</td><td>否</td><td>过滤数组，返回包含符合条件的元素的数组，可链式调用</td></tr><tr><td>for...of</td><td>否</td><td>for...of遍历具有Iterator迭代器的对象的属性，返回的是数组的元素、对象的属性值，不能遍历普通的obj对象，将异步循环变成同步循环</td></tr><tr><td>every和some</td><td>否</td><td>some()只要有一个是true，便返回true；而every()只要有一个是false，便返回false.</td></tr><tr><td>find和findIndex</td><td>否</td><td>find()返回的是第一个符合条件的值；findIndex()返回的是第一个返回条件的</td></tr><tr><td>reduce和reduceRight</td><td>否</td><td>reduce()对数组正序操作；reduceRight()对数组逆序操作</td></tr></tbody></table><p>💥 <strong>数组有哪些常用的方法</strong></p><ul><li>尾部：pop、push（可传入多个参数）</li><li>首部：shift、unshift、</li><li>数组拼接：concat ，返回的是拼接好的数组，不影响原数组</li><li>数组截取：slice(开始位置，结束位置)，不影响原数组</li><li>数组插入：splice(操作位置，删除个数，插入元素)，影响原数组；splice(0,1)表示从第0个元素开始，删掉一个元素，返回的是删掉的那个元素数组</li><li>查找特定项的索引：indexof、lastIndexOf</li><li>迭代方法：every、some、filter(返回符合要求的数组)、map（返回操作后的新数组）、forEach</li><li>数组归并：reduce、reduceRight</li><li>重排序：reverse、sort</li><li>数组转成字符串：join(用于连接数组元素的值)</li><li>字符串转成数组元素：split(&#39; &#39;)，元素用逗号隔开</li></ul><p>:💥: <strong>数组去重的方法</strong></p><ul><li>set() + Array.from()</li><li>双层循环 + splice()</li><li>循环 + includes/indexOf()：返回索引，没找到返回-1</li><li>filter()+indexOf()</li></ul>",8),s=[l];function o(a,n,c,p,h,f){return r(),d("div",null,s)}const m=t(i,[["render",o]]);export{u as __pageData,m as default};
