import{_ as e,c as i,o as t,d as l}from"./app.cec77ba5.js";const p=JSON.parse('{"title":"Vite 概况","description":"","frontmatter":{},"headers":[{"level":2,"title":"vite 为什么快","slug":"vite-为什么快","link":"#vite-为什么快","children":[]},{"level":2,"title":"vite 核心","slug":"vite-核心","link":"#vite-核心","children":[{"level":3,"title":"一、开发服务器","slug":"一、开发服务器","link":"#一、开发服务器","children":[]},{"level":3,"title":"二、rollup 打包","slug":"二、rollup-打包","link":"#二、rollup-打包","children":[]}]}],"relativePath":"Vite/vite概况.md"}'),a={name:"Vite/vite概况.md"},r=l('<h1 id="vite-概况" tabindex="-1">Vite 概况 <a class="header-anchor" href="#vite-概况" aria-hidden="true">#</a></h1><h2 id="vite-为什么快" tabindex="-1">vite 为什么快 <a class="header-anchor" href="#vite-为什么快" aria-hidden="true">#</a></h2><ul><li>因为现代浏览器对 module 的支持，可以自动向服务器获取 import 的内容，所以 vite 不用像传统打包方式那样把全部文件编译构建成一个 bundlejs 返回给浏览器；vite 指定的入口是 html，访问 vite 服务时就把这个 html 返回渲染，后续浏览器需要哪个模块再返回那个模块，真正做到按需引入</li></ul><h2 id="vite-核心" tabindex="-1">vite 核心 <a class="header-anchor" href="#vite-核心" aria-hidden="true">#</a></h2><h3 id="一、开发服务器" tabindex="-1">一、开发服务器 <a class="header-anchor" href="#一、开发服务器" aria-hidden="true">#</a></h3><ul><li>vite 通过使用原生的 nodejs 来搭建服务器，读取、编译并返回相关模块给浏览器；</li><li>vite 天生支持 ts 也是在 node 服务中对 ts 进行了处理 <ul><li>vite 支持的很多东西都是通过 node 服务来进行操作的</li></ul></li><li>如果浏览器向 vite 服务请求一个 vue 文件，那么服务器会对vue文件处理并返回 html、css、js 给浏览器</li></ul><h3 id="二、rollup-打包" tabindex="-1">二、rollup 打包 <a class="header-anchor" href="#二、rollup-打包" aria-hidden="true">#</a></h3><ul><li>rollup 打包不像 webpack 那样会插入比较多的 runtime 代码</li><li>一些第三方库不打包到 bundlejs 中</li></ul>',8),d=[r];function n(s,h,o,c,u,v){return t(),i("div",null,d)}const m=e(a,[["render",n]]);export{p as __pageData,m as default};
